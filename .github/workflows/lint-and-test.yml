name: Build, lint, and test app

# Trigger workflows on specific events
on:
  push:
    branches:
      - main

jobs:
  # Define the job for CI
  ci:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repo
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Backend - Setup Java Environment
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # Step 3: Backend - Build and Test Spring Boot
      - name: Backend - Build and Test
        working-directory: ./server
        run: |
          mvn clean install
          mvn test

      # Step 4: Backend - SonarQube Linting
      - name: SonarQube Linting
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('./server/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=tony \
            -Dsonar.projectName='tony'

      # Step 5: Frontend - Setup Node.js Environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 6: Frontend - Install Dependencies and Lint
      - name: Frontend - Install and Lint
        working-directory: ./devopsapp
        run: |
          npm ci
          npm run lint

      # Step 7: Frontend - Run Unit Tests
      - name: Frontend - Unit Tests
        working-directory: ./devopsapp
        run: npm test -- --watch=false --no-progress

      # Step 8: Frontend - Build the Angular Project
      - name: Frontend - Build
        working-directory: ./devopsapp
        run: npm run build --prod

      # Optional Step: Archive build artifacts
      # - name: Archive Build Artifacts
      #   if: success()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: build-artifacts
      #     path: |
      #       ./devopsapp/dist/
      #       ./server/target/
