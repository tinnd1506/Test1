name: Build, lint, and test app

on:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Backend Setup
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # - name: Backend - Build and Test
      #   working-directory: ./server
      #   run: |
      #     mvn clean install
      #     mvn test

      - name: SonarQube Linting
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze with SonarQube
        working-directory: ./server  # Ensure the correct directory is used
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=tony_api \
            -Dsonar.projectName='tony_api'

      # Frontend Setup
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Frontend - Install and Lint
        working-directory: ./devopsapp
        run: |
          npm ci
          npm run lint

      - name: Frontend - Unit Tests
        working-directory: ./devopsapp
        run: npm test -- --watch=false --no-progress --coverage

      - name: Frontend - Build
        working-directory: ./devopsapp
        run: npm run build --prod

      # Optional: Archive build artifacts
      - name: Archive Build Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            ./devopsapp/dist/
            ./server/target/
